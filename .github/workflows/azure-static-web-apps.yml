name: Azure Static Web Apps CI/CD

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main
      - develop
      - qa

permissions:
  contents: read
  pull-requests: write   

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    strategy:
      matrix:
        include:
          - branch: develop
            environment: development
            build_command: npm run build:dev
            token: AZURE_STATIC_WEB_APPS_API_TOKEN_DEV
          - branch: qa
            environment: qa
            build_command: npm run build:qa
            token: AZURE_STATIC_WEB_APPS_API_TOKEN_QA
          - branch: main
            environment: production
            build_command: npm run build
            token: AZURE_STATIC_WEB_APPS_API_TOKEN_PROD

    environment: ${{ matrix.environment }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.14.0'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Build Angular app
        run: ${{ matrix.build_command }}

      - name: Copy staticwebapp.config.json
        run: cp staticwebapp.config.json dist/portal-integral/browser/

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: angular-build-${{ matrix.environment }}
          path: dist/portal-integral/browser

      - name: Deploy to Azure Static Web Apps
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets[matrix.token] }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          app_location: "/"
          output_location: "dist/portal-integral/browser"
          app_build_command: ${{ matrix.build_command }}
